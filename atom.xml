<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pansheng`s Blog</title>
  
  <subtitle>不积跬步，无以至千里！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wangpansheng.github.io/"/>
  <updated>2018-04-13T09:05:42.397Z</updated>
  <id>https://wangpansheng.github.io/</id>
  
  <author>
    <name>Pansheng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ubuntu安装rime输入法</title>
    <link href="https://wangpansheng.github.io/2018/04/13/ubuntu%E5%AE%89%E8%A3%85rime%E8%BE%93%E5%85%A5%E6%B3%95/"/>
    <id>https://wangpansheng.github.io/2018/04/13/ubuntu安装rime输入法/</id>
    <published>2018-04-13T09:46:19.000Z</published>
    <updated>2018-04-13T09:05:42.397Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;ubuntu系统安装-rime输入法&quot;&gt;&lt;a href=&quot;#ubuntu系统安装-rime输入法&quot; class=&quot;headerlink&quot; title=&quot;ubuntu系统安装 rime输入法&quot;&gt;&lt;/a&gt;ubuntu系统安装
        
      
    
    </summary>
    
    
      <category term="linux" scheme="https://wangpansheng.github.io/tags/linux/"/>
    
      <category term="ubuntu" scheme="https://wangpansheng.github.io/tags/ubuntu/"/>
    
      <category term="rime" scheme="https://wangpansheng.github.io/tags/rime/"/>
    
  </entry>
  
  <entry>
    <title>快速上手快应用</title>
    <link href="https://wangpansheng.github.io/2018/03/23/%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B%E5%BF%AB%E5%BA%94%E7%94%A8/"/>
    <id>https://wangpansheng.github.io/2018/03/23/快速上手快应用/</id>
    <published>2018-03-23T03:19:27.000Z</published>
    <updated>2018-03-23T03:52:21.911Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;快应用是国内各大厂商联合制定的，基于手机硬件平台的新型应用形态，和小程序类似，无需安装，随用随走。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;搭建开发环境&quot;&gt;&lt;a href=&quot;#搭建开发环境&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>科学上网</title>
    <link href="https://wangpansheng.github.io/2017/10/31/%E6%89%8B%E6%91%B8%E6%89%8B%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E5%8E%BB%E6%9C%8D%E5%8A%A1/"/>
    <id>https://wangpansheng.github.io/2017/10/31/手摸手搭建科学上网去服务/</id>
    <published>2017-10-31T08:02:12.000Z</published>
    <updated>2018-04-13T09:08:37.022Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;因为工作的原因，需要查询资料，国内文档比较少，需要访问国外的网站，所以这里需要科学上网。本篇文章是搭建科学上网的服务端，搭建成功之后，客户端链接就可以尽情科学上网了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;安装具体步骤&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>MongoDB数据库配合NodeJS简单使用</title>
    <link href="https://wangpansheng.github.io/2017/10/09/MongoDB%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0/"/>
    <id>https://wangpansheng.github.io/2017/10/09/MongoDB简单学习/</id>
    <published>2017-10-09T11:11:15.000Z</published>
    <updated>2018-04-13T09:09:46.803Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于-MongoDB&quot;&gt;&lt;a href=&quot;#关于-MongoDB&quot; class=&quot;headerlink&quot; title=&quot;关于 MongoDB&quot;&gt;&lt;/a&gt;关于 MongoDB&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;  我们一般把数据库分为关系型数据库和非关系型数据库，MongoDB就是属于非关系型数据库的一种。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;官网：&lt;a href=&quot;https://www.mongodb.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.mongodb.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;下载地址：&lt;a href=&quot;https://www.mongodb.com/download-center?jmp=nav&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.mongodb.com/download-center?jmp=nav&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;环境安装&quot;&gt;&lt;a href=&quot;#环境安装&quot; class=&quot;headerlink&quot; title=&quot;环境安装&quot;&gt;&lt;/a&gt;环境安装&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.smartftp.com/support/kb/the-program-cant-start-because-api-ms-win-crt-runtime-l1-1-0dll-is-missing-f2702.html?lang=zh-CN&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.smartftp.com/support/kb/the-program-cant-start-because-api-ms-win-crt-runtime-l1-1-0dll-is-missing-f2702.html?lang=zh-CN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/33265663/api-ms-win-crt-runtime-l1-1-0-dll-is-missing-when-opening-microsoft-office-file&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://stackoverflow.com/questions/33265663/api-ms-win-crt-runtime-l1-1-0-dll-is-missing-when-opening-microsoft-office-file&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;启动和关闭-MongoDB-数据库服务程序&quot;&gt;&lt;a href=&quot;#启动和关闭-MongoDB-数据库服务程序&quot; class=&quot;headerlink&quot; title=&quot;启动和关闭 MongoDB 数据库服务程序&quot;&gt;&lt;/a&gt;启动和关闭 MongoDB 数据库服务程序&lt;/h2&gt;&lt;p&gt;mongod.exe 是我们要启动的服务器文件&lt;br&gt;mongo的客户端去连我们的服务器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;打开终端，输入 &lt;code&gt;mongod&lt;/code&gt; 回车&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mongod&lt;/code&gt; 命令用来启动 MongoDB 数据服务&lt;/li&gt;
&lt;li&gt;MongoDB 服务默认将 C:/data/db 目录作为数据目录&lt;/li&gt;
&lt;li&gt;所以你需要先在 C:/ 根目录新建一个目录：C:/data/db&lt;/li&gt;
&lt;li&gt;当你执行 mongod 命令的时候，默认会去使用 c:/data/db 目录作为数据存储目录&lt;/li&gt;
&lt;li&gt;如果你不想使用 c:/data/db 目录&lt;/li&gt;
&lt;li&gt;mongod –dbpath=路径&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;32位操作系统启动 MongoDB&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jingyan.baidu.com/article/76a7e409e1bb49fc3b6e1516.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://jingyan.baidu.com/article/76a7e409e1bb49fc3b6e1516.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mongod --dbpath 数据存储路径 --journal --storageEngine=mmapv1&lt;/code&gt;&lt;br&gt;mongod –dbpath C:/data/db –journal –storageEngine=mmapv1`&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="MongoDB" scheme="https://wangpansheng.github.io/tags/MongoDB/"/>
    
      <category term="NodeJS" scheme="https://wangpansheng.github.io/tags/NodeJS/"/>
    
  </entry>
  
  <entry>
    <title>linux安装mongodb</title>
    <link href="https://wangpansheng.github.io/2017/09/26/linux%E5%AE%89%E8%A3%85mongodb/"/>
    <id>https://wangpansheng.github.io/2017/09/26/linux安装mongodb/</id>
    <published>2017-09-26T12:26:22.000Z</published>
    <updated>2018-04-26T12:28:47.178Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;Linux下安装MongoDB&quot;&gt;&lt;a href=&quot;#Linux下安装MongoDB&quot; class=&quot;headerlink&quot; title=&quot;Linux下安装MongoDB&quot;&gt;&lt;/a&gt;Linux下安装MongoDB&lt;/h1&gt;&lt;h2
        
      
    
    </summary>
    
    
      <category term="linux" scheme="https://wangpansheng.github.io/tags/linux/"/>
    
      <category term="mongodb" scheme="https://wangpansheng.github.io/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>css变形</title>
    <link href="https://wangpansheng.github.io/2017/07/11/css%E5%8F%98%E5%BD%A2/"/>
    <id>https://wangpansheng.github.io/2017/07/11/css变形/</id>
    <published>2017-07-11T01:23:13.000Z</published>
    <updated>2018-01-31T12:35:05.792Z</updated>
    
    <summary type="html">
    
      &lt;h1&gt;css变形&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;  我们可以借助css3实现图片元素的倾斜、缩放、移动、以及翻转效果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-tranfrom属性语法&quot;&gt;&lt;a href=&quot;#1-tranfrom属性语法&quot; class=&quot;headerlink&quot; title=&quot;1.  tranfrom属性语法&quot;&gt;&lt;/a&gt;1.  tranfrom属性语法&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;  tranfrom属性让元素在一个坐标系统中变形，包含一系列变形函数，可以移动、旋转和缩放元素。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;transfrom: none | &amp;lt;transfrom-function&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;默认值为:none,表示不对元素进行变形;&lt;/li&gt;
&lt;li&gt;也可以指定一个或者多个变形函数，以空格分开。如：rotate、scale、trasnslate;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;2-变形函数介绍&quot;&gt;&lt;a href=&quot;#2-变形函数介绍&quot; class=&quot;headerlink&quot; title=&quot;2.  变形函数介绍&quot;&gt;&lt;/a&gt;2.  变形函数介绍&lt;/h2&gt;
    
    </summary>
    
    
      <category term="css3" scheme="https://wangpansheng.github.io/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>前后端渲染的对比</title>
    <link href="https://wangpansheng.github.io/2017/05/14/%E5%89%8D%E5%90%8E%E7%AB%AF%E6%B8%B2%E6%9F%93%E7%9A%84%E5%AF%B9%E6%AF%94/"/>
    <id>https://wangpansheng.github.io/2017/05/14/前后端渲染的对比/</id>
    <published>2017-05-14T11:01:13.000Z</published>
    <updated>2018-01-31T12:39:09.846Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  服务端渲染是通过后端模板引擎编译成html,css,js,然后回传给前端来进行显示；而前端渲染则是将整个生成逻辑代码全部回传前端，再由客户端生成用户界面。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;为什么会有服务端渲染与客户端渲染&quot;&gt;&lt;a href=&quot;#为什么会有服务端渲染与客户端渲染&quot; class=&quot;headerlink&quot; title=&quot;为什么会有服务端渲染与客户端渲染&quot;&gt;&lt;/a&gt;为什么会有服务端渲染与客户端渲染&lt;/h2&gt;&lt;p&gt;早期，我们每一个页面都是直接由html，css，js实现的，每一个页面彼此之间相当于是独立的，当我们的网站应用足够大的时候，每当我们需要修改网站的内容时，我们需要更改很多的代码，非常麻烦。&lt;/p&gt;
&lt;p&gt;那么后来，我们聪明的程序员就想到了，使用代码生成代码，就是后端的模板引擎，人们开始广泛使用模板代替手写html，大大减少的前端的工作量。通过代码生成代码，其实就是编译，基于html等基础语言，做出了更高层次的抽象封装，增加了易用性。&lt;/p&gt;
&lt;p&gt;后来h5,c3的崛起，再加上客户端硬件性能的提升，我们开始通过前端模板引擎，来在客户端渲染页面。&lt;/p&gt;
&lt;p&gt;对待模板，angular，vue，react的态度都不一样。&lt;/p&gt;
    
    </summary>
    
    
      <category term="服务端渲染" scheme="https://wangpansheng.github.io/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B8%B2%E6%9F%93/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu常用软件部署</title>
    <link href="https://wangpansheng.github.io/2017/04/02/ubuntu%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E9%83%A8%E7%BD%B2/"/>
    <id>https://wangpansheng.github.io/2017/04/02/ubuntu常用软件部署/</id>
    <published>2017-04-02T09:46:19.000Z</published>
    <updated>2018-01-31T12:39:09.828Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ubuntu中快速安装nodejs&quot;&gt;&lt;a href=&quot;#ubuntu中快速安装nodejs&quot; class=&quot;headerlink&quot; title=&quot;ubuntu中快速安装nodejs&quot;&gt;&lt;/a&gt;ubuntu中快速安装nodejs&lt;/h1&gt;&lt;h2 id=&quot;1-我们可以直接通过apt-get安装nodejs&quot;&gt;&lt;a href=&quot;#1-我们可以直接通过apt-get安装nodejs&quot; class=&quot;headerlink&quot; title=&quot;1.  我们可以直接通过apt-get安装nodejs&quot;&gt;&lt;/a&gt;1.  我们可以直接通过&lt;code&gt;apt-get&lt;/code&gt;安装nodejs&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update //需要先刷新本地索引包&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install nodejs //然后安装nodejs包&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install npm    //安装npm包管理器&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2-安装好的node版本较低，我们可以使用n模块升级node到你需要打版本&quot;&gt;&lt;a href=&quot;#2-安装好的node版本较低，我们可以使用n模块升级node到你需要打版本&quot; class=&quot;headerlink&quot; title=&quot;2. 安装好的node版本较低，我们可以使用n模块升级node到你需要打版本&quot;&gt;&lt;/a&gt;2. 安装好的node版本较低，我们可以使用n模块升级node到你需要打版本&lt;/h2&gt;&lt;h4 id=&quot;1-node有一个-n模块，专门用来管理nodejs版本的。不过目前并不支持windows系统。我们先安装下&quot;&gt;&lt;a href=&quot;#1-node有一个-n模块，专门用来管理nodejs版本的。不过目前并不支持windows系统。我们先安装下&quot; class=&quot;headerlink&quot; title=&quot;1.  node有一个 n模块，专门用来管理nodejs版本的。不过目前并不支持windows系统。我们先安装下&quot;&gt;&lt;/a&gt;1.  node有一个 n模块，专门用来管理nodejs版本的。不过目前并不支持windows系统。我们先安装下&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install -g n&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;2-升级到制定版本，我们可以在n加上指定的版本号就可以&quot;&gt;&lt;a href=&quot;#2-升级到制定版本，我们可以在n加上指定的版本号就可以&quot; class=&quot;headerlink&quot; title=&quot;2.  升级到制定版本，我们可以在n加上指定的版本号就可以&quot;&gt;&lt;/a&gt;2.  升级到制定版本，我们可以在n加上指定的版本号就可以&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo n 6.10.2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://wangpansheng.github.io/tags/linux/"/>
    
      <category term="ubuntu" scheme="https://wangpansheng.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu常见问题处理</title>
    <link href="https://wangpansheng.github.io/2017/04/02/ubuntu%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    <id>https://wangpansheng.github.io/2017/04/02/ubuntu常见问题/</id>
    <published>2017-04-02T09:46:19.000Z</published>
    <updated>2018-01-31T12:42:33.003Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;常见问题处理&quot;&gt;&lt;a href=&quot;#常见问题处理&quot; class=&quot;headerlink&quot; title=&quot;常见问题处理&quot;&gt;&lt;/a&gt;常见问题处理&lt;/h2&gt;&lt;h3 id=&quot;1-win10和ubuntu双系统时，硬盘无法加载问题&quot;&gt;&lt;a href=&quot;#1-win10和ubuntu双系统时，硬盘无法加载问题&quot; class=&quot;headerlink&quot; title=&quot;1.  win10和ubuntu双系统时，硬盘无法加载问题&quot;&gt;&lt;/a&gt;1.  win10和ubuntu双系统时，硬盘无法加载问题&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;需要依赖于ntfs-3g，如果没有需要先安装这个&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install ntfs-3g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后只用ntfsfix修复，即可&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo ntfsfix /绝对路径&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://wangpansheng.github.io/tags/linux/"/>
    
      <category term="ubuntu" scheme="https://wangpansheng.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>centos-01</title>
    <link href="https://wangpansheng.github.io/2017/03/03/centos-01/"/>
    <id>https://wangpansheng.github.io/2017/03/03/centos-01/</id>
    <published>2017-03-03T07:44:10.000Z</published>
    <updated>2018-01-31T12:34:56.746Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//查看当前centos系统的版本&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat /etc/redhat-release&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//查看系统内核版本是32位还是64位&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;uname -r&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//安装cnpm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install cnpm -g --registry=https://registry.npm.taobao.org&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;添加用户&quot;&gt;&lt;a href=&quot;#添加用户&quot; class=&quot;headerlink&quot; title=&quot;添加用户&quot;&gt;&lt;/a&gt;添加用户&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;  在企业生产中，一般不会直接使用root来操作，可以通过命令创建用户，并且进行切换，普通用户下，前边显示的是$符号，root下显示的是#&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="centos" scheme="https://wangpansheng.github.io/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>NodeJS构建express框架开发简单应用</title>
    <link href="https://wangpansheng.github.io/2017/01/10/nodeJS%E6%9E%84%E5%BB%BAexpress%E6%A1%86%E6%9E%B6%E5%BC%80%E5%8F%91%E7%AE%80%E5%8D%95%E5%BA%94%E7%94%A8/"/>
    <id>https://wangpansheng.github.io/2017/01/10/nodeJS构建express框架开发简单应用/</id>
    <published>2017-01-10T13:39:28.000Z</published>
    <updated>2018-01-31T12:37:12.974Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  使用node express简单构建，配合MongoDB数据库，实现简单的增删改查操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;首先我们需要构建express本地框架结构&quot;&gt;&lt;a href=&quot;#首先我们需要构建express本地框架结构&quot; class=&quot;headerlink&quot; title=&quot;首先我们需要构建express本地框架结构&quot;&gt;&lt;/a&gt;首先我们需要构建express本地框架结构&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;express demo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//在demo文件夹中构建express结构&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;然后我们运行一下，&quot;&gt;&lt;a href=&quot;#然后我们运行一下，&quot; class=&quot;headerlink&quot; title=&quot;然后我们运行一下，&quot;&gt;&lt;/a&gt;然后我们运行一下，&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行之后，我们在浏览器打开localhost:3000就可以看到初始化的页面，&lt;/p&gt;
&lt;h2 id=&quot;因为我们是使用-MongoDb数据库，所以需要安装mongodb的nodeJS包，&quot;&gt;&lt;a href=&quot;#因为我们是使用-MongoDb数据库，所以需要安装mongodb的nodeJS包，&quot; class=&quot;headerlink&quot; title=&quot;因为我们是使用 MongoDb数据库，所以需要安装mongodb的nodeJS包，&quot;&gt;&lt;/a&gt;因为我们是使用 MongoDb数据库，所以需要安装mongodb的nodeJS包，&lt;/h2&gt;&lt;p&gt;mongodb包的api基本上mongodb数据库的命令行操作命令差不多，所以，如果你比较清楚命令行操作命令，使用起来就会非常方便，&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//安装mongodb包&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install mongodb --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//安装依赖包&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;至此，所有的准备工作基本完成，当然，前提你已经装好mongodb数据库，而且在使用的时候，需要全程开启数据库服务器。mongodb数据库的安装，我以前有文章有介绍过，有兴趣的可以去看看。&lt;/p&gt;
&lt;h2 id=&quot;我们使用MVC架构来实现针对数据库的增删改查，&quot;&gt;&lt;a href=&quot;#我们使用MVC架构来实现针对数据库的增删改查，&quot; class=&quot;headerlink&quot; title=&quot;我们使用MVC架构来实现针对数据库的增删改查，&quot;&gt;&lt;/a&gt;我们使用MVC架构来实现针对数据库的增删改查，&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;我们创建一个文件夹 module，就是连接控制数据库的文件。&lt;/li&gt;
&lt;li&gt;我们使用routes来代替controller同样的功能，来连接视图层和数据库的连接。&lt;/li&gt;
&lt;li&gt;我们的整体逻辑是，我们路由中添加一个get请求，请求中调用module中的一个操作方法，然后module中的添加方法，再去调用数据库连接，然后在使用操作api操作数据库。&lt;h2 id=&quot;在module中首先连接到数据库&quot;&gt;&lt;a href=&quot;#在module中首先连接到数据库&quot; class=&quot;headerlink&quot; title=&quot;在module中首先连接到数据库&quot;&gt;&lt;/a&gt;在module中首先连接到数据库&lt;/h2&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="NodeJS express" scheme="https://wangpansheng.github.io/tags/NodeJS-express/"/>
    
  </entry>
  
  <entry>
    <title>数组方法梳理</title>
    <link href="https://wangpansheng.github.io/2016/11/26/%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95%E6%A2%B3%E7%90%86/"/>
    <id>https://wangpansheng.github.io/2016/11/26/数组方法梳理/</id>
    <published>2016-11-26T00:55:03.000Z</published>
    <updated>2018-01-31T12:42:33.014Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/bg2.jpg&quot; alt=&quot;images/bg2.jpg&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  由于发现对数组和字符串原生的方法有点记不太清了，所以打算梳理一下，把这写方法整理一下，加强自己的记忆。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;  以下数组演示都以数组 数组arr=[1,2,3]为原始值；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;length&quot;&gt;&lt;a href=&quot;#length&quot; class=&quot;headerlink&quot; title=&quot;length&quot;&gt;&lt;/a&gt;length&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;返回数组的长度&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;arr.length;&lt;span class=&quot;comment&quot;&gt;//返回值是3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;concat&quot;&gt;&lt;a href=&quot;#concat&quot; class=&quot;headerlink&quot; title=&quot;concat()&quot;&gt;&lt;/a&gt;concat()&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;连接两个或更多数组，并返回新数组，&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;arr.concat([&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//返回是数组[1,2,3,8,9,0]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//不会修改原数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="数组，js基础" scheme="https://wangpansheng.github.io/tags/%E6%95%B0%E7%BB%84%EF%BC%8Cjs%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>原生框架封装之插件开发</title>
    <link href="https://wangpansheng.github.io/2016/11/20/%E5%8E%9F%E7%94%9F%E6%A1%86%E6%9E%B6%E5%B0%81%E8%A3%85%E4%B9%8B%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    <id>https://wangpansheng.github.io/2016/11/20/原生框架封装之插件开发/</id>
    <published>2016-11-20T01:25:49.000Z</published>
    <updated>2018-01-31T12:42:33.010Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;cookie&quot;&gt;&lt;a href=&quot;#cookie&quot; class=&quot;headerlink&quot; title=&quot;cookie&quot;&gt;&lt;/a&gt;cookie&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;历史背景&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http https: 都是一种无状态、无连接的协议&lt;/li&gt;
&lt;li&gt;tcp/ip 是一种长连接协议&lt;/li&gt;
&lt;li&gt;无论什么用户都可以访问网址页面，在实际开发中，有些页面需要先验证身份才可以访问的，此时就需要http记录用户的状态，（登录状态），&lt;/li&gt;
&lt;li&gt;但是http协议是无状态的，因此就诞生了session和cookie&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;应用场景&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;登录功能：记录登录状态，以及一些用户基本信息。&lt;/li&gt;
&lt;li&gt;用户基本信息：昵称、头像地址、加密后的密码（记住密码）、用户名&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;做cookie插件的目的&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;方便前端人员操作cookie&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="原生框架封装" scheme="https://wangpansheng.github.io/tags/%E5%8E%9F%E7%94%9F%E6%A1%86%E6%9E%B6%E5%B0%81%E8%A3%85/"/>
    
      <category term="js，jquery" scheme="https://wangpansheng.github.io/tags/js%EF%BC%8Cjquery/"/>
    
  </entry>
  
  <entry>
    <title>jqeury框架封装练习3</title>
    <link href="https://wangpansheng.github.io/2016/11/18/%E6%A1%86%E6%9E%B6%E5%B0%81%E8%A3%85%E7%BB%83%E4%B9%A03/"/>
    <id>https://wangpansheng.github.io/2016/11/18/框架封装练习3/</id>
    <published>2016-11-18T03:23:09.000Z</published>
    <updated>2018-01-31T12:42:27.854Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;DOM操作模块&quot;&gt;&lt;a href=&quot;#DOM操作模块&quot; class=&quot;headerlink&quot; title=&quot;DOM操作模块&quot;&gt;&lt;/a&gt;DOM操作模块&lt;/h2&gt;&lt;h3 id=&quot;appendTO方法&quot;&gt;&lt;a href=&quot;#appendTO方法&quot; class=&quot;headerlink&quot; title=&quot;appendTO方法&quot;&gt;&lt;/a&gt;appendTO方法&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;语法：实例对象.appendTo(target);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;功能：将调用者上的所有DOM元素，分别追加到目标元素上&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;target参数类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择器&lt;/li&gt;
&lt;li&gt;DOM元素&lt;/li&gt;
&lt;li&gt;DOM数组，伪数组&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;为了更方便处理不同的类型，在实现时，首先统一target的参数类型，方便发i吗逻辑的处理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将target统一成itcast的对象，参数一致，便于处理，同时由于是itcast对象，就可以直接调用each方法进行遍历元素&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;实现思路&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;统一target类型，&lt;/li&gt;
&lt;li&gt;遍历target，再遍历调用者&lt;/li&gt;
&lt;li&gt;判断，当目标元素是不是第一个元素，如果是，不需要拷贝源节点，否则就要深拷贝源节点，&lt;/li&gt;
&lt;li&gt;将上述得到的新节点，缓存起来到数组中，&lt;/li&gt;
&lt;li&gt;再将新节点追加到dom元素中&lt;/li&gt;
&lt;li&gt;将缓存的数组转换成itcast对象，作为appendTo的返回值，来实现链式编程。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="原生框架" scheme="https://wangpansheng.github.io/tags/%E5%8E%9F%E7%94%9F%E6%A1%86%E6%9E%B6/"/>
    
      <category term="JavaScript" scheme="https://wangpansheng.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>框架封装之Ajax</title>
    <link href="https://wangpansheng.github.io/2016/11/17/%E6%A1%86%E6%9E%B6%E5%B0%81%E8%A3%85%E4%B9%8BAjax/"/>
    <id>https://wangpansheng.github.io/2016/11/17/框架封装之Ajax/</id>
    <published>2016-11-17T01:31:26.000Z</published>
    <updated>2018-01-31T12:42:33.022Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;ajax请求步骤&quot;&gt;&lt;a href=&quot;#ajax请求步骤&quot; class=&quot;headerlink&quot; title=&quot;ajax请求步骤&quot;&gt;&lt;/a&gt;ajax请求步骤&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;创建请求对象&lt;/li&gt;
&lt;li&gt;格式化数据&lt;/li&gt;
&lt;li&gt;与服务器建立连接&lt;/li&gt;
&lt;li&gt;监听请求状态&lt;/li&gt;
&lt;li&gt;发送请求&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;创建请求对象&quot;&gt;&lt;a href=&quot;#创建请求对象&quot; class=&quot;headerlink&quot; title=&quot;创建请求对象&quot;&gt;&lt;/a&gt;创建请求对象&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;原生方法&lt;ul&gt;
&lt;li&gt;w3c:XMLHttpRequest&lt;/li&gt;
&lt;li&gt;IE：ActiveXObject&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;封装Ajax模块&quot;&gt;&lt;a href=&quot;#封装Ajax模块&quot; class=&quot;headerlink&quot; title=&quot;封装Ajax模块&quot;&gt;&lt;/a&gt;封装Ajax模块&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;确定Ajax配置的默认值&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;url =&amp;gt; “”&lt;/li&gt;
&lt;li&gt;type =&amp;gt; “get”&lt;/li&gt;
&lt;li&gt;data =&amp;gt; {}&lt;/li&gt;
&lt;li&gt;success =&amp;gt; null&lt;/li&gt;
&lt;li&gt;fail =&amp;gt; null&lt;/li&gt;
&lt;li&gt;async =&amp;gt; true&lt;/li&gt;
&lt;li&gt;dataType =&amp;gt; “json”&lt;/li&gt;
&lt;li&gt;contentType =&amp;gt; “application/x-www-form-ulencoded”&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ajax默认配置放在哪？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;要用一个对象来存储上述Ajax配置信息，像jQuery一样，将其放到工厂函数上；&lt;br&gt;放在工厂函数jq上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="框架封装，ajax" scheme="https://wangpansheng.github.io/tags/%E6%A1%86%E6%9E%B6%E5%B0%81%E8%A3%85%EF%BC%8Cajax/"/>
    
  </entry>
  
  <entry>
    <title>原生框架封装练习02</title>
    <link href="https://wangpansheng.github.io/2016/11/17/%E5%8E%9F%E7%94%9F%E6%A1%86%E6%9E%B6%E5%B0%81%E8%A3%85%E7%BB%83%E4%B9%A02/"/>
    <id>https://wangpansheng.github.io/2016/11/17/原生框架封装练习2/</id>
    <published>2016-11-17T01:26:35.000Z</published>
    <updated>2018-01-31T12:42:33.004Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;工具类方法与功能类方法&quot;&gt;&lt;a href=&quot;#工具类方法与功能类方法&quot; class=&quot;headerlink&quot; title=&quot;工具类方法与功能类方法&quot;&gt;&lt;/a&gt;工具类方法与功能类方法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;工具类方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以在内部使用，也可以给使用者使用，不需要常见实例就可以调用的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;功能类方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;框架内部的对象的方法，必须使用该对象去调用，操作dom元素的方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;类型判断方法&quot;&gt;&lt;a href=&quot;#类型判断方法&quot; class=&quot;headerlink&quot; title=&quot;类型判断方法&quot;&gt;&lt;/a&gt;类型判断方法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;isString方法：判断指定 参数是不是字符串类型，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;isHTML：判断指定参数是不是html字符串&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以&amp;lt;开头，以&amp;gt;结尾，长度不小于3的字符串&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;isDOM：判断指定的参数是不是dom对象&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果参数不为null或undefined，并且具有nodetype属性，那么类型就是dom对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;isArrayLink：判断指定参数是不是数组或伪数组&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果对象的length属性是number类型&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="原生框架封装" scheme="https://wangpansheng.github.io/tags/%E5%8E%9F%E7%94%9F%E6%A1%86%E6%9E%B6%E5%B0%81%E8%A3%85/"/>
    
      <category term="原生js实现jq" scheme="https://wangpansheng.github.io/tags/%E5%8E%9F%E7%94%9Fjs%E5%AE%9E%E7%8E%B0jq/"/>
    
  </entry>
  
  <entry>
    <title>jquery框架封装练习01</title>
    <link href="https://wangpansheng.github.io/2016/11/15/%E5%8E%9F%E7%94%9F%E6%A1%86%E6%9E%B6%E5%B0%81%E8%A3%85%E7%BB%83%E4%B9%A001/"/>
    <id>https://wangpansheng.github.io/2016/11/15/原生框架封装练习01/</id>
    <published>2016-11-15T07:07:04.000Z</published>
    <updated>2018-01-31T12:39:09.852Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;我们通过原生的js实现一些jq的功能，通过练习，锻炼我们的分析问题的能力。锻炼编程的思维能力。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查询DOM方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;操作DOM方法&lt;ul&gt;
&lt;li&gt;appendTo&lt;/li&gt;
&lt;li&gt;append&lt;/li&gt;
&lt;li&gt;prependTo&lt;/li&gt;
&lt;li&gt;prepend&lt;/li&gt;
&lt;li&gt;next/prev&lt;/li&gt;
&lt;li&gt;nextAll/prevAll&lt;/li&gt;
&lt;li&gt;before&lt;/li&gt;
&lt;li&gt;after&lt;/li&gt;
&lt;li&gt;parent /parents&lt;/li&gt;
&lt;li&gt;nextSibling&lt;/li&gt;
&lt;li&gt;attr&lt;/li&gt;
&lt;li&gt;prop&lt;/li&gt;
&lt;li&gt;val&lt;/li&gt;
&lt;li&gt;html&lt;/li&gt;
&lt;li&gt;text&lt;/li&gt;
&lt;li&gt;css&lt;/li&gt;
&lt;li&gt;addClass&lt;/li&gt;
&lt;li&gt;hasClass&lt;/li&gt;
&lt;li&gt;removeClass&lt;/li&gt;
&lt;li&gt;toggleClass&lt;/li&gt;
&lt;li&gt;on&lt;/li&gt;
&lt;li&gt;off&lt;/li&gt;
&lt;li&gt;click /dbclick/keydown&lt;/li&gt;
&lt;li&gt;$.ajax&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;jQuery框架结构&quot;&gt;&lt;a href=&quot;#jQuery框架结构&quot; class=&quot;headerlink&quot; title=&quot;jQuery框架结构&quot;&gt;&lt;/a&gt;jQuery框架结构&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;为了防止对变量和全局对象的污染，使用沙箱模式&lt;/li&gt;
&lt;li&gt;jq的功能是查询DOM和操作DOM，&lt;ul&gt;
&lt;li&gt;在查询时，通过选择器来查询。因此要使用函数去实现Dom元素的查询。在实现时，要先定义一个函数init，&lt;/li&gt;
&lt;li&gt;查询到DOM后，要对这些DOM进行操作，此时，要使用面向对象编程的方式来实现，创建一个对象，然后通过该对象的方法来实现操作查询到的DOM元素。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;由于框架的结构在完成之后，不允许任何使用者随意改动，所以用户如果想要扩展方法，就必须向其能拿到的对象上扩展，$-&amp;gt;createinit，也就是工厂函数以及其原型。最终要实现init对象继承自createinit函数的原型。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="js" scheme="https://wangpansheng.github.io/tags/js/"/>
    
      <category term="原生js实现jq，原生框架封装" scheme="https://wangpansheng.github.io/tags/%E5%8E%9F%E7%94%9Fjs%E5%AE%9E%E7%8E%B0jq%EF%BC%8C%E5%8E%9F%E7%94%9F%E6%A1%86%E6%9E%B6%E5%B0%81%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>JS原型链总结</title>
    <link href="https://wangpansheng.github.io/2016/10/10/js%E5%8E%9F%E5%9E%8B/"/>
    <id>https://wangpansheng.github.io/2016/10/10/js原型/</id>
    <published>2016-10-10T13:22:24.000Z</published>
    <updated>2018-01-31T12:39:09.828Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原型&quot;&gt;&lt;a href=&quot;#原型&quot; class=&quot;headerlink&quot; title=&quot;原型&quot;&gt;&lt;/a&gt;原型&lt;/h2&gt;&lt;h3 id=&quot;定义：是函数的prototype属性所引用的对象&quot;&gt;&lt;a href=&quot;#定义：是函数的prototype属性所引用的对象&quot; class=&quot;headerlink&quot; title=&quot;定义：是函数的prototype属性所引用的对象&quot;&gt;&lt;/a&gt;定义：是函数的prototype属性所引用的对象&lt;/h3&gt;&lt;h3 id=&quot;目的：为了同类对象之间的数据共享&quot;&gt;&lt;a href=&quot;#目的：为了同类对象之间的数据共享&quot; class=&quot;headerlink&quot; title=&quot;目的：为了同类对象之间的数据共享&quot;&gt;&lt;/a&gt;目的：为了同类对象之间的数据共享&lt;/h3&gt;&lt;h3 id=&quot;实际开发的使用&quot;&gt;&lt;a href=&quot;#实际开发的使用&quot; class=&quot;headerlink&quot; title=&quot;实际开发的使用&quot;&gt;&lt;/a&gt;实际开发的使用&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;// 1: 定义构造函数，实现函数体部分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 使用构造函数 结合原型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age, sex&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 特有的属性写在这里&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 2：将该对象相关的方法定义在原型上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 将共有的属性（一般是方法）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.say = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.run = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 或者&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;constructor&lt;/span&gt;: Person,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	say: function() &amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	run: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 3：创建对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; zs = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="JS" scheme="https://wangpansheng.github.io/tags/JS/"/>
    
      <category term="原型" scheme="https://wangpansheng.github.io/tags/%E5%8E%9F%E5%9E%8B/"/>
    
      <category term="原型链" scheme="https://wangpansheng.github.io/tags/%E5%8E%9F%E5%9E%8B%E9%93%BE/"/>
    
      <category term="函数" scheme="https://wangpansheng.github.io/tags/%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>canvas入门2</title>
    <link href="https://wangpansheng.github.io/2016/09/11/canvas%E5%85%A5%E9%97%A82/"/>
    <id>https://wangpansheng.github.io/2016/09/11/canvas入门2/</id>
    <published>2016-09-11T00:54:50.000Z</published>
    <updated>2018-01-31T12:34:48.517Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;懒加载：现在不加载，用的时候再加载，&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;案例&quot;&gt;&lt;a href=&quot;#案例&quot; class=&quot;headerlink&quot; title=&quot;案例&quot;&gt;&lt;/a&gt;案例&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;移动的小球 实线思路：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;简单版&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;利用计时器，定时执行&lt;/li&gt;
&lt;li&gt;首先绘制一个圆形，圆从左上角出来，然后定时改变圆心的位置，再进行绘制，&lt;/li&gt;
&lt;li&gt;等到x轴的坐标大于w或者小于0，改变每一步的正负值，使其反向运动，&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;鼠标进入再鼠标所在位置绘制圆形，然后开始下落&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;时钟案例&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="JS" scheme="https://wangpansheng.github.io/tags/JS/"/>
    
      <category term="画布" scheme="https://wangpansheng.github.io/tags/%E7%94%BB%E5%B8%83/"/>
    
      <category term="Canvas" scheme="https://wangpansheng.github.io/tags/Canvas/"/>
    
  </entry>
  
  <entry>
    <title>Canvas入门1</title>
    <link href="https://wangpansheng.github.io/2016/09/10/canvas%E5%85%A5%E9%97%A81/"/>
    <id>https://wangpansheng.github.io/2016/09/10/canvas入门1/</id>
    <published>2016-09-10T13:22:24.000Z</published>
    <updated>2018-01-31T12:39:09.805Z</updated>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;概念：中文：“画布，帆布”&lt;br&gt;HTML5提出一个新的标签。可以通过脚本语言（JS）在其上面绘制图形、图像以及制作动画。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基本使用&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;创建Canvas标签，同时指定canvas标签的大小；如果不指定的话，默认值为 300 * 150 （px）&lt;br&gt; 如果想动态改变canvas的宽和高，必须通过其属性节点width以及height来改变，不能通过css样式来改变。&lt;/li&gt;
&lt;li&gt;通过js获取到canvas对象。本身Canvas不具备绘图能力。&lt;/li&gt;
&lt;li&gt;通过Canvas对象调用getContext方法来获取绘图的API方法&lt;/li&gt;
&lt;li&gt;使用获取到绘图工具来绘制图形&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;getContext方法&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;语法: &amp;lt;canvas对象&amp;gt;.getContext(‘2d|WebGL’);&lt;/li&gt;
&lt;li&gt;功能：获取绘制平面图形或立体图形的api方法以及相关属性；如果参数值为’2d’&lt;br&gt; ，表示获取绘制平面图形的工具；如果参数值为’WebGL’,表示获取绘制立体图形的工具。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;基本绘图API&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;ctx.moveTo(x, y) 移动笔触到指定点。&lt;/li&gt;
&lt;li&gt;ctx.lineTo(x, y) 从笔触所在点连线到指定点&lt;/li&gt;
&lt;li&gt;ctx.stroke(); 将当前路径绘制的图形描绘其边框&lt;/li&gt;
&lt;li&gt;ctx.fill(); 填充一个封闭的图形（将当前路径形成一个封闭图形，然后在填充。）&lt;/li&gt;
&lt;li&gt;stroke方法与fill方法可以同时调用&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="JS" scheme="https://wangpansheng.github.io/tags/JS/"/>
    
      <category term="canvas" scheme="https://wangpansheng.github.io/tags/canvas/"/>
    
      <category term="画布" scheme="https://wangpansheng.github.io/tags/%E7%94%BB%E5%B8%83/"/>
    
  </entry>
  
</feed>
